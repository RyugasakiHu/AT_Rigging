import imp
from maya import cmds
from Core import buildSession
import autorig_settings
# from see import see

class BuildSessionUi(object):
    
    def __init__(self):
        
        self.win = None
        self.modulesUi = []
        self.buildSession = buildSession.BuildSession()
    
    def openUi(self):
        
        #check exist
        if cmds.window('buildSession',ex = 1):
            cmds.deleteUI('buildSession')
            
        self.win = cmds.window('buildSession',title = 'AT_rig UI V1.0',w = 300,h = 500)    
        
        self.mainL = cmds.columnLayout(w = 300 , adj = 1)
        
        cmds.separator(h = 5,st = 'none')
        self.modulesMenu = cmds.optionMenu(label = 'modules')
        
        for menu in self.buildSession.availableModules:
            cmds.menuItem(l = menu)            
            
        cmds.separator(h = 5,st = 'none')
        self.addButton = cmds.button(label = 'ADD',h = 30,c = self.addModule)
        cmds.separator(h = 10)
        
        self.modulesScrollLayout = cmds.scrollLayout(hst = 0,vst = 16,rc = self.__resizeScroll)          
        self.modulesLayout = cmds.columnLayout(w = 299,adj = 1)
        self.__resizeScroll()
        
        cmds.setParent(self.mainL)
        self.buildGuidesB = cmds.button(l = 'Build Guides',c = self.buildGuides)
        self.buildRigB = cmds.button(l = 'Build Rig',c = self.buildRig)
        self.stressTestB = cmds.button(l = 'Stress Test',c = self.stressTest)
        cmds.showWindow(self.win)

    def __resizeScroll(self,*args):
         
        high = cmds.window(self.win,q = 1,h = 1)
        wegh = cmds.scrollLayout(self.modulesScrollLayout,q = 1,w = 1)
        cmds.scrollLayout(self.modulesScrollLayout,e = 1,h = wegh)                
        cmds.columnLayout(self.modulesLayout, e = 1,w = wegh - 7)    
        
    def addModule(self,*args):
        
        moduleName = cmds.optionMenu(self.modulesMenu,q = 1,v = 1)
        modulePath = self.buildSession.modulesDict[moduleName]
        module = imp.load_source('module.name',modulePath)
        moduleUi = module.getUi(self.modulesLayout,self)
        self.modulesUi.append(moduleUi)
        
    def buildGuides(self,*args):
        
        tempClasses = []
        
        for c in self.modulesUi:
            tempClasses.append(c.getModuleInstance())
            
        self.buildSession.modules = tempClasses
        self.buildSession.buildGuides()
    
    def buildRig(self,*args):
        
        self.buildSession.build()
        self.buildSession.buildConnections()
        
    def stressTest(self,*args):
        
        self.buildSession.build()
        
